<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.shardingsphere.example.repository.mybatis.repository.MybatisOtherItemRepository">
    <resultMap id="baseResultMap" type="io.shardingsphere.example.repository.api.entity.OtherItem">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_item_id" property="orderItemId" jdbcType="INTEGER"/>
        <result column="order_id" property="orderId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
    </resultMap>
    
    <update id="createTableIfNotExists">
        CREATE TABLE IF NOT EXISTS t_other_item ( id BIGINT AUTO_INCREMENT, order_item_id BIGINT, order_id BIGINT, user_id INT NOT NULL, PRIMARY KEY (id));
    </update>
    
    <update id="truncateTable">
        TRUNCATE TABLE t_other_item;
    </update>
    
    <update id="dropTable">
        DROP TABLE IF EXISTS t_other_item;
    </update>
    
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_other_item (order_id, user_id, order_item_id) VALUES (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderItemId,jdbcType=INTEGER});
    </insert>
    
    <delete id="delete">
        DELETE FROM t_other_item WHERE id = #{id,jdbcType=INTEGER};
    </delete>
    
    <select id="selectAll" resultMap="baseResultMap">
        SELECT * FROM t_other_item
    </select>
    
    <select id="selectRange" resultMap="baseResultMap">
        SELECT * FROM t_other_item WHERE user_id BETWEEN 1 AND 5
    </select>
</mapper>
